!function(){"use strict";angular.module("application.boiler.authentication",[])}(),function(){"use strict";function t(t,e,n,o,i,r,s){function a(t){l.isLoading=!0,n(function(){if(t){var e=new i.single({name:l.user.name,username:l.user.username,email:l.user.email,password:l.user.password});e.$save(function(t){t.success?(l.isLoading=!1,l.isSuccess=!0,r.success("Welcome, "+t.res.record.name),u(t.res.record,t.res.token)):(l.isLoading=!1,l.tryAgain=!0,r.error(t.res.message))})}else l.isLoading=!1,l.tryAgain=!0,r.error("Hmm... Something seems to be missing")},500)}function u(t,n){var i=angular.toJson(t);o.set("user",i),o.set("boilerToken",n),e.$broadcast("loggedIn")}var l=this;l.signup=a,l.postSignup=u,l.user={name:"",username:"",email:"",password:""}}t.$inject=["$state","$rootScope","$timeout","appStorage","appUsers","appToast","appAuth"],angular.module("application.boiler.authentication").controller("SignupController",t)}(),function(){"use strict";function t(t,e,n,o){function i(){e.hide()}function r(){var t=new n.forgot({email:s.attempt.email});t.$save(function(t){t.success?(s.tokenGenerated=!0,o.success("Great! Now you should check your email for your token")):o.error(t.res.message)})}var s=this;s.close=i,s.generateReset=r,s.attempt={email:""}}t.$inject=["$state","$mdDialog","appUsers","appToast"],angular.module("application.boiler.authentication").controller("PasswordResetController",t)}(),function(){"use strict";function t(t,e,n){n.remove("user"),n.remove("boilerToken"),t.$broadcast("loggedOut"),e.go("landing")}t.$inject=["$rootScope","$state","appStorage"],angular.module("application.boiler.authentication").controller("LogoutController",t)}(),function(){"use strict";function t(t,e,n,o,i,r,s){function a(){var t=i.get("userEmail");t?(g.user.email=atob(t),g.isRemembered=!0):g.user.email=""}function u(){o.show({controller:"PasswordResetController",controllerAs:"vm",templateUrl:"/angular/authentication/reset/password.reset.html"})["finally"](function(){})}function l(t){g.isLoading=!0,n(function(){if(t){var e=new r.authenticate({email:g.user.email,password:g.user.password});if("undefined"!=typeof g.remember){var n=btoa(g.user.email);i.set("userEmail",n)}"undefined"!=typeof g.forget&&i.remove("userEmail"),e.$save(function(t){t.success?(g.isLoading=!1,g.isSuccess=!0,s.success("Welcome back, "+t.res.record.name),c(t.res.record,t.res.token)):(g.isLoading=!1,g.tryAgain=!0,s.error(t.res.message))})}else g.isLoading=!1,g.tryAgain=!0,s.error("Hmm... Something seems to be missing")},500)}function c(t,n){var o=angular.toJson(t);i.set("user",o),i.set("boilerToken",n),e.$broadcast("loggedIn")}var g=this;g.checkRemember=a,g.openPasswordReset=u,g.login=l,g.postLogin=c,g.user={email:"",password:""},a()}t.$inject=["$state","$rootScope","$timeout","$mdDialog","appStorage","appUsers","appToast"],angular.module("application.boiler.authentication").controller("LoginController",t)}(),function(){"use strict";angular.module("application.boiler.utilities",["ui.router","ngResource","ngAria","ngAnimate","ngMessages","ngResource","ngMaterial"])}(),function(){"use strict";function t(t){function e(e){var n=t.simple().content(e).action("OK").highlightAction(!1).position("bottom right").theme("success-toast");t.show(n)}function n(e){var n=t.simple().content(e).action("OK").highlightAction(!1).position("bottom right").theme("error-toast");t.show(n)}var o={success:e,error:n};return o}t.$inject=["$mdToast"],angular.module("application.boiler.utilities").factory("appToast",t)}(),function(){"use strict";function t(){function t(t){return localStorage.getItem(t)}function e(t,e){return localStorage.setItem(t,e)}function n(t){return localStorage.removeItem(t)}var o={get:t,set:e,remove:n};return o}angular.module("application.boiler.utilities").factory("appStorage",t)}(),function(){"use strict";function t(t){function e(){var e=t.get("user");return e?angular.fromJson(e):void 0}function n(){return t.get("boilerToken")}function o(){return t.get("boilerToken")}var i={getUser:e,getToken:n,isLoggedIn:o};return i}t.$inject=["appStorage"],angular.module("application.boiler.utilities").factory("appAuth",t)}(),function(){"use strict";function t(t,e){return{request:function(t){return t.headers.Authorization="Bearer "+e.get("boilerToken"),t},responseError:function(e){401!==e.status&&403!==e.status||t.$broadcast("noAccess")}}}t.$inject=["$rootScope","appStorage"],angular.module("application.boiler.utilities").factory("tokenHttpInterceptor",t)}(),function(){"use strict";angular.module("application.boiler.users",[])}(),function(){"use strict";function t(t){return{single:t("users/:userId/:action",{userId:"@_id"},{forgot:{method:"POST",params:{action:"forgot"}}}),authenticate:t("users/authenticate"),forgot:t("users/forgot"),reset:t("users/forgot/:token")}}t.$inject=["$resource"],angular.module("application.boiler.users").factory("appUsers",t)}(),function(){"use strict";angular.module("application.boiler.settings",[])}(),function(){"use strict";function t(t,e){return{single:t("settings/")}}t.$inject=["$resource","$rootScope"],angular.module("application.boiler.settings").factory("appSettings",t)}(),function(){"use strict";function t(t,e,n,o){function i(){var t=n.single.get({},function(){t.res.hasNoSettings?o.success("Here you can set your settings"):(s.settings=t.res.item,s.settings.theme=s.settings.theme)})}function r(t){var i=new n.single({theme:s.settings.theme});i.$save(function(t){t.success?(o.success("Your settings are saved"),e.$broadcast("settingsUpdate")):o.error(t.res.message)})}var s=this;s.getSettings=i,s.save=r,i()}t.$inject=["$state","$rootScope","appSettings","appToast"],angular.module("application.boiler.settings").controller("SettingsController",t)}(),function(){"use strict";function t(t){t.state("auth",{templateUrl:"/angular/authentication/auth.html","abstract":!0}),t.state("auth.signup",{url:"/signup",templateUrl:"/angular/authentication/signup/signup.html",controller:"SignupController",controllerAs:"vm"}),t.state("auth.login",{url:"/login",templateUrl:"/angular/authentication/login/login.html",controller:"LoginController",controllerAs:"vm"}),t.state("auth.logout",{url:"/logout",templateUrl:"/angular/landing/landing.html",controller:"LogoutController"})}t.$inject=["$stateProvider"],angular.module("application.boiler.authentication").config(t)}(),function(){"use strict";angular.module("application.boiler.landing",[])}(),function(){"use strict";function t(t){}t.$inject=["$state"],angular.module("application.boiler.landing").controller("LandingController",t)}(),function(){"use strict";function t(t){t.state("landing",{url:"/home",templateUrl:"/angular/landing/landing.html",controller:"LandingController",controllerAs:"vm"})}t.$inject=["$stateProvider"],angular.module("application.boiler.landing").config(t)}(),function(){"use strict";function t(){function t(t){return n[t]}function e(t,e){o[t]=e}var n={theme:"default"},o={};this.getDefaultOptions=t,this.setDefaultOptions=e,angular.extend(o,n),this.$get=function(){function t(t,e){o[t]=e}function e(t,e){for(var i in n)o[i]=n[i];var r=angular.isDefined(e.data)&&angular.isDefined(e.data.settings)?e.data.settings:{};angular.extend(o,n,r)}return{settings:o,setOption:t,updateSettingsFromState:e}}}angular.module("application.boiler.settings").provider("settingsProvider",t)}(),function(){"use strict";function t(t){t.state("setting",{url:"/settings/:name",templateUrl:"/angular/settings/create/settings.html",controller:"SettingsController",controllerAs:"vm"})}t.$inject=["$stateProvider"],angular.module("application.boiler.settings").config(t)}(),function(){"use strict";angular.module("application.boiler",["application.boiler.utilities","application.boiler.authentication","application.boiler.users","application.boiler.settings","application.boiler.landing"])}(),function(){"use strict";function t(t,e,n,o,i,r,s){function a(){n("left").toggle()}function u(){t.isLoggedIn=o.isLoggedIn(),t.user=o.getUser()}function l(){if(o.isLoggedIn())var e=i.single.get({},function(){e.res.hasNoSettings?t.settings=s.settings:t.settings=e.res.item});else t.settings=s.settings}var c=this;c.openUserMenu=a,c.updateLoginStatus=u,c.initializeSettings=l,u(),l(),t.$on("loggedIn",function(){u()}),t.$on("loggedOut",function(){u()}),t.$on("settingsUpdate",function(){l()})}t.$inject=["$rootScope","$state","$mdSidenav","appAuth","appSettings","appToast","settingsProvider"],angular.module("application.boiler").controller("AppController",t)}(),function(){"use strict";function t(t,e,n){e.when("","/home"),e.when("/","/home"),e.otherwise("/home"),n.interceptors.push("tokenHttpInterceptor")}t.$inject=["$stateProvider","$urlRouterProvider","$httpProvider"],angular.module("application.boiler").config(t)}();